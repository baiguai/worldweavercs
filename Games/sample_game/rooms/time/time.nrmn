{room, key=time_room, name=Time Room
    {enter_message
        output={@
This is a room for testing time-related features.
Every time the user enters a command, time is incremented by the setting value set here:
~/worldweaver/WorldWeaver/Config/AppSettings.json

Once that is updated, be sure to recompile the .NET application, and when running that
for the first time, do:
_bg <the game in question>

Then you can play it and test how time works in the WorldWeaver (WW) game engine.

You can test time passage in this room, by issuing the 'look' action (Or use the shorter: l and
hit enter). Doing this repeatedly, you will see day become night.

You are in a field.
<?[isday] = 'true'?>
The sun is shining brightly overhead.
</?>
<?[isday] = 'false'?>
A pale full moon dimly lights the flat vast expanse.
</?>

You have been on this mission for <<[missiondays]>> days.

You see a red button that will reset the mission days.
        }
    }

    {look
        {message
            output={@
You are in the 'time' room.
<?[isday] = 'true'?>
The sun is shining brightly overhead.
</?>
<?[isday] = 'false'?>
A pale full moon dimly lights the flat vast expanse.
</?>

You have been on this mission for <<[missiondays]>> days.

You see a red button that will reset the mission days.
            }
        }
    }

    {inject, logic=nav.inj }
    {inject, logic=look.inj }
    {inject, logic=home.inj }

--------------------------------------------------------------------------------
    Since the button's sole job is to be pushed, it really
    doesn't have to be a separate object.

    {input, syntax=(?i)\bpush\s+(?:the\s+)?(?:red\s+)?button\b
        {act, logic=[reset_mission_days]
            {message
                output={@
You have reset the mission days.
                }
            }
        }
    }
}
