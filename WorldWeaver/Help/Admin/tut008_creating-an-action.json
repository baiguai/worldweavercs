{
    "topics" : [
        {
            "pattern" : "\\b(?:creating.an.action.element)\\b",
            "title" : "Creating an Action Element",
            "string" : "
In the last topic we added a custom element type of 'look' to our room.
We want to display this text when the player looks around.
In order to allow the player to look around we'll create an action element.

Action elements are very powerful. They allow us to display messages, move
the player, or npcs (Non player characters), change tags, set various values in
the game's database, all kinds of things.

We'll dig deeper into actions in the future. But for now we'll define an action
element that will call our look element:

---

{key=local_pub, name=Local Pub, type=room, parent=root
    {type=enter_message
        output={@
You are sitting in your local pub.
        }
    }

    {type=look
        {type=message
            output={@
You look around the local pub.
North of where you are sitting is a small door.
            }
        }
    }


    {type=input, syntax=\b(look|l)\b
        {type=action, logic=look, tags=type }
    }
}

---

Wait a minute! What is that 'input' element?
Input elements are how WorldWeaver (WW) processes the input that the player
gives it. One of the properties of an element is 'syntax' this property utilizes
what is called Regular Expressions (Regex) to match with what the user has entered.
Regex is extremely powerful (But difficult to learn, and not entirely intuitive)
if you want to learn all about it use: _help regex

With the syntax we've defined the player can type 'look' or 'l' and it will
process this input element.
We've created an action element as the child of the input element. So if the input
matches the syntax, it will call our action.

To have the action call our custom 'look' type element, we set it's 'logic' to our
type - 'look' in this case. And we let it know what that logic refers to. To do this
we create a tag of 'type'.

So this action calls an element by its type, and the type is specified in the logic.

You recall that our player element has a bunch of attribute elements with the tag of 'stats'.
Let's use 'input' and 'action' to allow the player to see these stats.
",
            "links" : [
                "_help creating a global file"
            ]
        }
    ]
}
